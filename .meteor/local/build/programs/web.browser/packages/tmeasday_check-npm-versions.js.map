{"version":3,"sources":["meteor://ðŸ’»app/packages/tmeasday:check-npm-versions/check-npm-versions.js"],"names":["module1","module","export","checkNpmVersions","semver","watch","require","v","compatibleVersionIsInstalled","name","range","installedVersion","version","satisfies","e","message","toString","match","packages","packageName","failures","Object","keys","forEach","failure","length","errors","installed","requirement","push","qualifier","console","warn","join"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,UAAQC,MAAd;AAAqBD,QAAQE,MAAR,CAAe;AAACC,oBAAiB;AAAA,WAAIA,gBAAJ;AAAA;AAAlB,CAAf;AAAwD,IAAIC,MAAJ;AAAWJ,QAAQK,KAAR,CAAcC,QAAQ,QAAR,CAAd,EAAgC;AAAA,uBAASC,CAAT,EAAW;AAACH,aAAOG,CAAP;AAAS;AAArB,CAAhC,EAAuD,CAAvD;;AAExF;AACA;AACA;AACA;AACA,IAAMC,+BAA+B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACpD,MAAI;AACF,QAAMC,mBAAmBL,QAAWG,IAAX,oBAAgCG,OAAzD;;AACA,QAAIR,OAAOS,SAAP,CAAiBF,gBAAjB,EAAmCD,KAAnC,CAAJ,EAA+C;AAC7C,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAOC,gBAAP;AACD;AACF,GAPD,CAOE,OAAOG,CAAP,EAAU;AACV;AACA,QAAMC,UAAUD,EAAEE,QAAF,EAAhB,CAFU,CAGV;;AACA,QAAID,QAAQE,KAAR,CAAc,oBAAd,KAAuCF,QAAQE,KAAR,CAAc,uBAAd,CAA3C,EAAmF;AACjF,aAAO,KAAP;AACD,KAFD,MAEO;AACL,YAAMH,CAAN;AACD;AACF;AACF,CAlBD;;AAoBO,IAAMX,mBAAmB,UAACe,QAAD,EAAWC,WAAX,EAA2B;AACzD,MAAMC,WAAW,EAAjB;AAEAC,SAAOC,IAAP,CAAYJ,QAAZ,EAAsBK,OAAtB,CAA8B,UAACd,IAAD,EAAU;AACtC,QAAMC,QAAQQ,SAAST,IAAT,CAAd;AACA,QAAMe,UAAUhB,6BAA6BC,IAA7B,EAAmCC,KAAnC,CAAhB;;AAEA,QAAIc,YAAY,IAAhB,EAAsB;AACpBJ,eAASX,IAAT,IAAiBe,OAAjB;AACD;AACF,GAPD;;AASA,MAAIH,OAAOC,IAAP,CAAYF,QAAZ,EAAsBK,MAAtB,KAAiC,CAArC,EAAwC;AACtC,WAAO,IAAP;AACD;;AAED,MAAMC,SAAS,EAAf;AAEAL,SAAOC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA8B,UAACd,IAAD,EAAU;AACtC,QAAMkB,YAAYP,SAASX,IAAT,CAAlB;AACA,QAAMmB,cAAiBnB,IAAjB,SAAyBS,SAAST,IAAT,CAA/B;;AAEA,QAAIkB,SAAJ,EAAe;AACbD,aAAOG,IAAP,SAAkBpB,IAAlB,SAA0BkB,SAA1B,oBAAkDC,WAAlD;AACD,KAFD,MAEO;AACLF,aAAOG,IAAP,SAAkBpB,IAAlB,SAA0BS,SAAST,IAAT,CAA1B;AACD;AACF,GATD;AAWA,MAAMqB,YAAYX,wBAAsBA,WAAtB,UAAwC,EAA1D;AACAY,UAAQC,IAAR,qCAA+CF,SAA/C,wBACAJ,OAAOO,IAAP,CAAY,IAAZ,CADA;AAMD,CApCM,C","file":"/packages/tmeasday_check-npm-versions.js","sourcesContent":["import semver from 'semver';\n\n// Returns:\n//   - true      if a version of the package in the range is installed\n//   - false     if no version is installed\n//   - version#  if incompatible version is installed\nconst compatibleVersionIsInstalled = (name, range) => {\n  try {\n    const installedVersion = require(`${name}/package.json`).version;\n    if (semver.satisfies(installedVersion, range)) {\n      return true;\n    } else {\n      return installedVersion;\n    }\n  } catch (e) {\n    // XXX add something to the tool to make this more reliable\n    const message = e.toString();\n    // One message comes out of the install npm package the other from npm directly\n    if (message.match(\"Cannot find module\") || message.match(\"Can't find npm module\")) {\n      return false;\n    } else {\n      throw e;\n    }\n  }\n};\n\nexport const checkNpmVersions = (packages, packageName) => {\n  const failures = {};\n\n  Object.keys(packages).forEach((name) => {\n    const range = packages[name];\n    const failure = compatibleVersionIsInstalled(name, range);\n\n    if (failure !== true) {\n      failures[name] = failure;\n    }\n  });\n\n  if (Object.keys(failures).length === 0) {\n    return true;\n  }\n\n  const errors = [];\n\n  Object.keys(failures).forEach((name) => {\n    const installed = failures[name];\n    const requirement = `${name}@${packages[name]}`;\n\n    if (installed) {\n      errors.push(` - ${name}@${installed} installed, ${requirement} needed`);\n    } else {\n      errors.push(` - ${name}@${packages[name]} not installed.`);\n    }\n  });\n\n  const qualifier = packageName ? `(for ${packageName}) ` : '';\n  console.warn(`WARNING: npm peer requirements ${qualifier}not installed:\n${errors.join('\\n')}\n\nRead more about installing npm peer dependencies:\n  http://guide.meteor.com/using-packages.html#peer-npm-dependencies\n`);\n};\n"]}