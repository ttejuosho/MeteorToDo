{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$10","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"packages/check/match_test.js","filename":"packages/check/match_test.js","sourceMapTarget":"packages/check/match_test.js.map","sourceMaps":true,"presets":[],"passPerPreset":false,"envName":"development","cwd":"/Users/taiwotejuosho/taiwo-do","parserOpts":{"sourceType":"module","sourceFileName":"packages/check/match_test.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","classProperties","asyncGenerators"]},"generatorOpts":{"filename":"packages/check/match_test.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"packages/check/match_test.js.map","sourceFileName":"packages/check/match_test.js"}},"code":"Tinytest.add(\"check - check\", function (test) {\n  var matches = function (value, pattern) {\n    var error;\n\n    try {\n      check(value, pattern);\n    } catch (e) {\n      error = e;\n    }\n\n    test.isFalse(error);\n    test.isTrue(Match.test(value, pattern));\n  };\n\n  var fails = function (value, pattern) {\n    var error;\n\n    try {\n      check(value, pattern);\n    } catch (e) {\n      error = e;\n    }\n\n    test.isTrue(error);\n    test.instanceOf(error, Match.Error);\n    test.isFalse(Match.test(value, pattern));\n  }; // Atoms.\n\n\n  var pairs = [[\"foo\", String], [\"\", String], [0, Number], [42.59, Number], [NaN, Number], [Infinity, Number], [true, Boolean], [false, Boolean], [function () {}, Function], [undefined, undefined], [null, null]];\n\n  _.each(pairs, function (pair) {\n    matches(pair[0], Match.Any);\n\n    _.each([String, Number, Boolean, undefined, null], function (type) {\n      if (type === pair[1]) {\n        matches(pair[0], type);\n        matches(pair[0], Match.Optional(type));\n        matches(undefined, Match.Optional(type));\n        matches(pair[0], Match.Maybe(type));\n        matches(undefined, Match.Maybe(type));\n        matches(null, Match.Maybe(type));\n        matches(pair[0], Match.Where(function () {\n          check(pair[0], type);\n          return true;\n        }));\n        matches(pair[0], Match.Where(function () {\n          try {\n            check(pair[0], type);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }));\n      } else {\n        fails(pair[0], type);\n        matches(pair[0], Match.OneOf(type, pair[1]));\n        matches(pair[0], Match.OneOf(pair[1], type));\n        fails(pair[0], Match.Where(function () {\n          check(pair[0], type);\n          return true;\n        }));\n        fails(pair[0], Match.Where(function () {\n          try {\n            check(pair[0], type);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }));\n      }\n\n      if (type !== null) fails(null, Match.Optional(type)); // Optional doesn't allow null, but does match on null type\n\n      fails(pair[0], [type]);\n      fails(pair[0], Object);\n    });\n  });\n\n  fails(true, Match.OneOf(String, Number, undefined, null, [Boolean]));\n  fails(new String(\"foo\"), String);\n  fails(new Boolean(true), Boolean);\n  fails(new Number(123), Number);\n  matches([1, 2, 3], [Number]);\n  matches([], [Number]);\n  fails([1, 2, 3, \"4\"], [Number]);\n  fails([1, 2, 3, [4]], [Number]);\n  matches([1, 2, 3, \"4\"], [Match.OneOf(Number, String)]);\n  matches({}, Object);\n  matches({}, {});\n  matches({\n    foo: 42\n  }, Object);\n  fails({\n    foo: 42\n  }, {});\n  matches({\n    a: 1,\n    b: 2\n  }, {\n    b: Number,\n    a: Number\n  });\n  fails({\n    a: 1,\n    b: 2\n  }, {\n    b: Number\n  });\n  matches({\n    a: 1,\n    b: 2\n  }, Match.ObjectIncluding({\n    b: Number\n  }));\n  fails({\n    a: 1,\n    b: 2\n  }, Match.ObjectIncluding({\n    b: String\n  }));\n  fails({\n    a: 1,\n    b: 2\n  }, Match.ObjectIncluding({\n    c: String\n  }));\n  fails({}, {\n    a: Number\n  });\n  matches({\n    nodeType: 1\n  }, {\n    nodeType: Match.Any\n  });\n  matches({\n    nodeType: 1\n  }, Match.ObjectIncluding({\n    nodeType: Match.Any\n  }));\n  fails({\n    nodeType: 1\n  }, {\n    nodeType: String\n  });\n  fails({}, Match.ObjectIncluding({\n    nodeType: Match.Any\n  })); // Match.Optional does not match on a null value, unless the allowed type is itself \"null\"\n\n  fails(null, Match.Optional(String));\n  fails(null, Match.Optional(undefined));\n  matches(null, Match.Optional(null)); // on the other hand, undefined, works fine for all of them\n\n  matches(undefined, Match.Optional(String));\n  matches(undefined, Match.Optional(undefined));\n  matches(undefined, Match.Optional(null));\n  fails(true, Match.Optional(String)); // different should still fail\n\n  matches(\"String\", Match.Optional(String)); // same should pass\n\n  matches({}, {\n    a: Match.Optional(Number)\n  });\n  matches({\n    a: 1\n  }, {\n    a: Match.Optional(Number)\n  });\n  fails({\n    a: true\n  }, {\n    a: Match.Optional(Number)\n  });\n  fails({\n    a: undefined\n  }, {\n    a: Match.Optional(Number)\n  }); // .Maybe requires undefined, null or the allowed type in order to match\n\n  matches(null, Match.Maybe(String));\n  matches(null, Match.Maybe(undefined));\n  matches(null, Match.Maybe(null));\n  matches(undefined, Match.Maybe(String));\n  matches(undefined, Match.Maybe(undefined));\n  matches(undefined, Match.Maybe(null));\n  fails(true, Match.Maybe(String)); // different should still fail\n\n  matches(\"String\", Match.Maybe(String)); // same should pass\n\n  matches({}, {\n    a: Match.Maybe(Number)\n  });\n  matches({\n    a: 1\n  }, {\n    a: Match.Maybe(Number)\n  });\n  fails({\n    a: true\n  }, {\n    a: Match.Maybe(Number)\n  }); // Match.Optional means \"or undefined\" at the top level but \"or absent\" in\n  // objects.\n  // Match.Maybe should behave the same as Match.Optional in objects\n  // including handling nulls\n\n  fails({\n    a: undefined\n  }, {\n    a: Match.Maybe(Number)\n  });\n  fails({\n    a: null\n  }, {\n    a: Match.Maybe(Number)\n  });\n\n  var F = function () {\n    this.x = 123;\n  };\n\n  fails(new F(), {\n    x: 123\n  });\n  matches({}, Match.ObjectWithValues(Number));\n  matches({\n    x: 1\n  }, Match.ObjectWithValues(Number));\n  matches({\n    x: 1,\n    y: 2\n  }, Match.ObjectWithValues(Number));\n  fails({\n    x: 1,\n    y: \"2\"\n  }, Match.ObjectWithValues(Number));\n  matches(\"asdf\", \"asdf\");\n  fails(\"asdf\", \"monkey\");\n  matches(123, 123);\n  fails(123, 456);\n  fails(\"123\", 123);\n  fails(123, \"123\");\n  matches(true, true);\n  matches(false, false);\n  fails(true, false);\n  fails(true, \"true\");\n  fails(\"false\", false);\n  matches(/foo/, RegExp);\n  fails(/foo/, String);\n  matches(new Date(), Date);\n  fails(new Date(), Number);\n  matches(EJSON.newBinary(42), Match.Where(EJSON.isBinary));\n  fails([], Match.Where(EJSON.isBinary));\n  matches(42, Match.Where(function (x) {\n    return x % 2 === 0;\n  }));\n  fails(43, Match.Where(function (x) {\n    return x % 2 === 0;\n  }));\n  matches({\n    a: \"something\",\n    b: [{\n      x: 42,\n      k: null\n    }, {\n      x: 43,\n      k: true,\n      p: [\"yay\"]\n    }]\n  }, {\n    a: String,\n    b: [Match.ObjectIncluding({\n      x: Number,\n      k: Match.OneOf(null, Boolean)\n    })]\n  }); // Match.Integer\n\n  matches(-1, Match.Integer);\n  matches(0, Match.Integer);\n  matches(1, Match.Integer);\n  matches(-2147483648, Match.Integer); // INT_MIN\n\n  matches(2147483647, Match.Integer); // INT_MAX\n\n  fails(123.33, Match.Integer);\n  fails(.33, Match.Integer);\n  fails(1.348192308491824e+23, Match.Integer);\n  fails(NaN, Match.Integer);\n  fails(Infinity, Match.Integer);\n  fails(-Infinity, Match.Integer);\n  fails({}, Match.Integer);\n  fails([], Match.Integer);\n  fails(function () {}, Match.Integer);\n  fails(new Date(), Match.Integer); // Test non-plain objects.\n\n  var parentObj = {\n    foo: \"bar\"\n  };\n  var childObj = Object.assign(Object.create(parentObj), {\n    bar: \"foo\"\n  });\n  matches(parentObj, Object);\n  fails(parentObj, {\n    foo: String,\n    bar: String\n  });\n  fails(parentObj, {\n    bar: String\n  });\n  matches(parentObj, {\n    foo: String\n  });\n  fails(childObj, Object);\n  fails(childObj, {\n    foo: String,\n    bar: String\n  });\n  fails(childObj, {\n    bar: String\n  });\n  fails(childObj, {\n    foo: String\n  }); // Functions\n\n  var testFunction = function () {};\n\n  matches(testFunction, Function);\n  fails(5, Function); // Circular Reference \"Classes\"\n\n  var TestInstanceChild = function () {};\n\n  var TestInstanceParent = function (child) {\n    child._parent = this;\n    this.child = child;\n  };\n\n  var testInstanceChild = new TestInstanceChild();\n  var testInstanceParent = new TestInstanceParent(testInstanceChild);\n  matches(TestInstanceParent, Function);\n  matches(testInstanceParent, TestInstanceParent);\n  fails(testInstanceChild, TestInstanceParent);\n  matches(testInstanceParent, Match.Optional(TestInstanceParent));\n  matches(testInstanceParent, Match.Maybe(TestInstanceParent)); // Circular Reference Objects\n\n  var circleFoo = {};\n  var circleBar = {};\n  circleFoo.bar = circleBar;\n  circleBar.foo = circleFoo;\n  fails(circleFoo, null); // Test that \"arguments\" is treated like an array.\n\n  var argumentsMatches = function () {\n    matches(arguments, [Number]);\n  };\n\n  argumentsMatches();\n  argumentsMatches(1);\n  argumentsMatches(1, 2);\n\n  var argumentsFails = function () {\n    fails(arguments, [Number]);\n  };\n\n  argumentsFails(\"123\");\n  argumentsFails(1, \"23\");\n});\nTinytest.add(\"check - argument checker\", function (test) {\n  var checksAllArguments = function (f\n  /*arguments*/\n  ) {\n    Match._failIfArgumentsAreNotAllChecked(f, {}, _.toArray(arguments).slice(1), \"test\");\n  };\n\n  checksAllArguments(function () {});\n  checksAllArguments(function (x) {\n    check(x, Match.Any);\n  }, undefined);\n  checksAllArguments(function (x) {\n    check(x, Match.Any);\n  }, null);\n  checksAllArguments(function (x) {\n    check(x, Match.Any);\n  }, false);\n  checksAllArguments(function (x) {\n    check(x, Match.Any);\n  }, true);\n  checksAllArguments(function (x) {\n    check(x, Match.Any);\n  }, 0);\n  checksAllArguments(function (a, b, c) {\n    check(a, String);\n    check(b, Boolean);\n    check(c, Match.Optional(Number));\n  }, \"foo\", true);\n  checksAllArguments(function () {\n    check(arguments, [Number]);\n  }, 1, 2, 4);\n  checksAllArguments(function (x) {\n    check(x, Number);\n    check(_.toArray(arguments).slice(1), [String]);\n  }, 1, \"foo\", \"bar\", \"baz\"); // NaN values\n\n  checksAllArguments(function (x) {\n    check(x, Number);\n  }, NaN);\n\n  var doesntCheckAllArguments = function (f\n  /*arguments*/\n  ) {\n    try {\n      Match._failIfArgumentsAreNotAllChecked(f, {}, _.toArray(arguments).slice(1), \"test\");\n\n      test.fail({\n        message: \"expected _failIfArgumentsAreNotAllChecked to throw\"\n      });\n    } catch (e) {\n      test.equal(e.message, \"Did not check() all arguments during test\");\n    }\n  };\n\n  doesntCheckAllArguments(function () {}, undefined);\n  doesntCheckAllArguments(function () {}, null);\n  doesntCheckAllArguments(function () {}, 1);\n  doesntCheckAllArguments(function () {\n    check(_.toArray(arguments).slice(1), [String]);\n  }, 1, \"asdf\", \"foo\");\n  doesntCheckAllArguments(function (x, y) {\n    check(x, Boolean);\n  }, true, false); // One \"true\" check doesn't count for all.\n\n  doesntCheckAllArguments(function (x, y) {\n    check(x, Boolean);\n  }, true, true); // For non-primitives, we really do require that each arg gets checked.\n\n  doesntCheckAllArguments(function (x, y) {\n    check(x, [Boolean]);\n    check(x, [Boolean]);\n  }, [true], [true]); // In an ideal world this test would fail, but we currently can't\n  // differentiate between \"two calls to check x, both of which are true\" and\n  // \"check x and check y, both of which are true\" (for any interned primitive\n  // type).\n\n  checksAllArguments(function (x, y) {\n    check(x, Boolean);\n    check(x, Boolean);\n  }, true, true);\n});\nTinytest.add(\"check - Match error path\", function (test) {\n  var match = function (value, pattern, expectedPath) {\n    try {\n      check(value, pattern);\n    } catch (err) {\n      // XXX just for FF 3.6, its JSON stringification prefers \"\\u000a\" to \"\\n\"\n      err.path = err.path.replace(/\\\\u000a/, \"\\\\n\");\n      if (err.path != expectedPath) test.fail({\n        type: \"match-error-path\",\n        message: \"The path of Match.Error doesn't match.\",\n        pattern: JSON.stringify(pattern),\n        value: JSON.stringify(value),\n        path: err.path,\n        expectedPath: expectedPath\n      });\n    }\n  };\n\n  match({\n    foo: [{\n      bar: 3\n    }, {\n      bar: \"something\"\n    }]\n  }, {\n    foo: [{\n      bar: Number\n    }]\n  }, \"foo[1].bar\"); // Complicated case with arrays, $, whitespace and quotes!\n\n  match([{\n    $FoO: {\n      \"bar baz\\n\\\"'\": 3\n    }\n  }], [{\n    $FoO: {\n      \"bar baz\\n\\\"'\": String\n    }\n  }], \"[0].$FoO[\\\"bar baz\\\\n\\\\\\\"'\\\"]\"); // Numbers only, can be accessed w/o quotes\n\n  match({\n    \"1231\": 123\n  }, {\n    \"1231\": String\n  }, \"[1231]\");\n  match({\n    \"1234abcd\": 123\n  }, {\n    \"1234abcd\": String\n  }, \"[\\\"1234abcd\\\"]\");\n  match({\n    $set: {\n      people: \"nice\"\n    }\n  }, {\n    $set: {\n      people: [String]\n    }\n  }, \"$set.people\");\n  match({\n    _underscore: \"should work\"\n  }, {\n    _underscore: Number\n  }, \"_underscore\"); // Nested array looks nice\n\n  match([[[\"something\", \"here\"], []], [[\"string\", 123]]], [[[String]]], \"[1][0][1]\"); // Object nested in arrays should look nice, too!\n\n  match([[[{\n    foo: \"something\"\n  }, {\n    foo: \"here\"\n  }], [{\n    foo: \"asdf\"\n  }]], [[{\n    foo: 123\n  }]]], [[[{\n    foo: String\n  }]]], \"[1][0][0].foo\"); // JS keyword\n\n  match({\n    \"return\": 0\n  }, {\n    \"return\": String\n  }, \"[\\\"return\\\"]\");\n});\nTinytest.add(\"check - Match error message\", function (test) {\n  var match = function (value, pattern, expectedMessage) {\n    try {\n      check(value, pattern);\n    } catch (err) {\n      if (err.message !== \"Match error: \" + expectedMessage) test.fail({\n        type: \"match-error-message\",\n        message: \"The message of Match.Error doesn't match.\",\n        pattern: JSON.stringify(pattern),\n        value: JSON.stringify(value),\n        errorMessage: err.message,\n        expectedErrorMessage: expectedMessage\n      });\n    }\n  };\n\n  match(2, String, \"Expected string, got number\");\n  match({\n    key: 0\n  }, Number, \"Expected number, got object\");\n  match(null, Boolean, \"Expected boolean, got null\");\n  match(\"string\", undefined, \"Expected undefined, got string\");\n  match(true, null, \"Expected null, got true\");\n  match({}, Match.ObjectIncluding({\n    bar: String\n  }), \"Missing key 'bar'\");\n  match(null, Object, \"Expected object, got null\");\n  match(null, Function, \"Expected function, got null\");\n  match(\"bar\", \"foo\", \"Expected foo, got \\\"bar\\\"\");\n  match(3.14, Match.Integer, \"Expected Integer, got 3.14\");\n  match(false, [Boolean], \"Expected array, got false\");\n  match([null, null], [String], \"Expected string, got null in field [0]\");\n  match(2, {\n    key: 2\n  }, \"Expected object, got number\");\n  match(null, {\n    key: 2\n  }, \"Expected object, got null\");\n  match(new Date(), {\n    key: 2\n  }, \"Expected plain object\");\n\n  var TestInstanceChild = function () {};\n\n  var TestInstanceParent = function (child) {\n    child._parent = this;\n    this.child = child;\n  };\n\n  var testInstanceChild = new TestInstanceChild();\n  var testInstanceParent = new TestInstanceParent(testInstanceChild);\n  match(testInstanceChild, TestInstanceParent, \"Expected \" + (TestInstanceParent.name || \"particular constructor\"));\n  var circleFoo = {};\n  var circleBar = {};\n  circleFoo.bar = circleBar;\n  circleBar.foo = circleFoo;\n  match(circleFoo, null, \"Expected null, got object\");\n}); // Regression test for https://github.com/meteor/meteor/issues/2136\n\nMeteor.isServer && Tinytest.addAsync(\"check - non-fiber check works\", function (test, onComplete) {\n  var Fiber = Npm.require('fibers'); // We can only call test.isTrue inside normal Meteor Fibery code, so give us a\n  // bindEnvironment way to get back.\n\n\n  var report = Meteor.bindEnvironment(function (success) {\n    test.isTrue(success);\n    onComplete();\n  }); // Get out of a fiber with process.nextTick and ensure that we can still use\n  // check.\n\n  process.nextTick(function () {\n    var success = true;\n    if (Fiber.current) success = false;\n\n    if (success) {\n      try {\n        check(true, Boolean);\n      } catch (e) {\n        success = false;\n      }\n    }\n\n    report(success);\n  });\n});","map":{"version":3,"sources":["packages/check/match_test.js"],"names":["Tinytest","add","test","matches","value","pattern","error","check","e","isFalse","isTrue","Match","fails","instanceOf","Error","pairs","String","Number","NaN","Infinity","Boolean","Function","undefined","_","each","pair","Any","type","Optional","Maybe","Where","OneOf","Object","foo","a","b","ObjectIncluding","c","nodeType","F","x","ObjectWithValues","y","RegExp","Date","EJSON","newBinary","isBinary","k","p","Integer","parentObj","childObj","assign","create","bar","testFunction","TestInstanceChild","TestInstanceParent","child","_parent","testInstanceChild","testInstanceParent","circleFoo","circleBar","argumentsMatches","arguments","argumentsFails","checksAllArguments","f","_failIfArgumentsAreNotAllChecked","toArray","slice","doesntCheckAllArguments","fail","message","equal","match","expectedPath","err","path","replace","JSON","stringify","$FoO","$set","people","_underscore","expectedMessage","errorMessage","expectedErrorMessage","key","name","Meteor","isServer","addAsync","onComplete","Fiber","Npm","require","report","bindEnvironment","success","process","nextTick","current"],"mappings":"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","file":"packages/check/match_test.js.map","sourcesContent":["Tinytest.add(\"check - check\", function (test) {\n  var matches = function (value, pattern) {\n    var error;\n    try {\n      check(value, pattern);\n    } catch (e) {\n      error = e;\n    }\n    test.isFalse(error);\n    test.isTrue(Match.test(value, pattern));\n  };\n  var fails = function (value, pattern) {\n    var error;\n    try {\n      check(value, pattern);\n    } catch (e) {\n      error = e;\n    }\n    test.isTrue(error);\n    test.instanceOf(error, Match.Error);\n    test.isFalse(Match.test(value, pattern));\n  };\n\n  // Atoms.\n  var pairs = [\n    [\"foo\", String],\n    [\"\", String],\n    [0, Number],\n    [42.59, Number],\n    [NaN, Number],\n    [Infinity, Number],\n    [true, Boolean],\n    [false, Boolean],\n    [function(){}, Function],\n    [undefined, undefined],\n    [null, null]\n  ];\n  _.each(pairs, function (pair) {\n    matches(pair[0], Match.Any);\n    _.each([String, Number, Boolean, undefined, null], function (type) {\n      if (type === pair[1]) {\n        matches(pair[0], type);\n        matches(pair[0], Match.Optional(type));\n        matches(undefined, Match.Optional(type));\n        matches(pair[0], Match.Maybe(type));\n        matches(undefined, Match.Maybe(type));\n        matches(null, Match.Maybe(type));\n        matches(pair[0], Match.Where(function () {\n          check(pair[0], type);\n          return true;\n        }));\n        matches(pair[0], Match.Where(function () {\n          try {\n            check(pair[0], type);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }));\n      } else {\n        fails(pair[0], type);\n        matches(pair[0], Match.OneOf(type, pair[1]));\n        matches(pair[0], Match.OneOf(pair[1], type));\n        fails(pair[0], Match.Where(function () {\n          check(pair[0], type);\n          return true;\n        }));\n        fails(pair[0], Match.Where(function () {\n          try {\n            check(pair[0], type);\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }));\n      }\n      if ( type !== null ) fails(null, Match.Optional(type)); // Optional doesn't allow null, but does match on null type\n      fails(pair[0], [type]);\n      fails(pair[0], Object);\n    });\n  });\n  fails(true, Match.OneOf(String, Number, undefined, null, [Boolean]));\n  fails(new String(\"foo\"), String);\n  fails(new Boolean(true), Boolean);\n  fails(new Number(123), Number);\n\n  matches([1, 2, 3], [Number]);\n  matches([], [Number]);\n  fails([1, 2, 3, \"4\"], [Number]);\n  fails([1, 2, 3, [4]], [Number]);\n  matches([1, 2, 3, \"4\"], [Match.OneOf(Number, String)]);\n\n  matches({}, Object);\n  matches({}, {});\n  matches({foo: 42}, Object);\n  fails({foo: 42}, {});\n  matches({a: 1, b:2}, {b: Number, a: Number});\n  fails({a: 1, b:2}, {b: Number});\n  matches({a: 1, b:2}, Match.ObjectIncluding({b: Number}));\n  fails({a: 1, b:2}, Match.ObjectIncluding({b: String}));\n  fails({a: 1, b:2}, Match.ObjectIncluding({c: String}));\n  fails({}, {a: Number});\n  matches({nodeType: 1}, {nodeType: Match.Any});\n  matches({nodeType: 1}, Match.ObjectIncluding({nodeType: Match.Any}));\n  fails({nodeType: 1}, {nodeType: String});\n  fails({}, Match.ObjectIncluding({nodeType: Match.Any}));\n\n  // Match.Optional does not match on a null value, unless the allowed type is itself \"null\"\n  fails(null, Match.Optional(String));\n  fails(null, Match.Optional(undefined));\n  matches(null, Match.Optional(null));\n\n  // on the other hand, undefined, works fine for all of them\n  matches(undefined, Match.Optional(String));\n  matches(undefined, Match.Optional(undefined));\n  matches(undefined, Match.Optional(null));\n\n  fails(true, Match.Optional(String)); // different should still fail\n  matches(\"String\", Match.Optional(String)); // same should pass\n\n  matches({}, {a: Match.Optional(Number)});\n  matches({a: 1}, {a: Match.Optional(Number)});\n  fails({a: true}, {a: Match.Optional(Number)});\n  fails({a: undefined}, {a: Match.Optional(Number)});\n\n  // .Maybe requires undefined, null or the allowed type in order to match\n  matches(null, Match.Maybe(String));\n  matches(null, Match.Maybe(undefined));\n  matches(null, Match.Maybe(null));\n\n  matches(undefined, Match.Maybe(String));\n  matches(undefined, Match.Maybe(undefined));\n  matches(undefined, Match.Maybe(null));\n\n  fails(true, Match.Maybe(String)); // different should still fail\n  matches(\"String\", Match.Maybe(String)); // same should pass\n\n  matches({}, {a: Match.Maybe(Number)});\n  matches({a: 1}, {a: Match.Maybe(Number)});\n  fails({a: true}, {a: Match.Maybe(Number)});\n  // Match.Optional means \"or undefined\" at the top level but \"or absent\" in\n  // objects.\n  // Match.Maybe should behave the same as Match.Optional in objects\n  // including handling nulls\n  fails({a: undefined}, {a: Match.Maybe(Number)});\n  fails({a: null}, {a: Match.Maybe(Number)});\n  var F = function () {\n    this.x = 123;\n  };\n  fails(new F, { x: 123 });\n\n  matches({}, Match.ObjectWithValues(Number));\n  matches({x: 1}, Match.ObjectWithValues(Number));\n  matches({x: 1, y: 2}, Match.ObjectWithValues(Number));\n  fails({x: 1, y: \"2\"}, Match.ObjectWithValues(Number));\n\n  matches(\"asdf\", \"asdf\");\n  fails(\"asdf\", \"monkey\");\n  matches(123, 123);\n  fails(123, 456);\n  fails(\"123\", 123);\n  fails(123, \"123\");\n  matches(true, true);\n  matches(false, false);\n  fails(true, false);\n  fails(true, \"true\");\n  fails(\"false\", false);\n\n  matches(/foo/, RegExp);\n  fails(/foo/, String);\n  matches(new Date, Date);\n  fails(new Date, Number);\n  matches(EJSON.newBinary(42), Match.Where(EJSON.isBinary));\n  fails([], Match.Where(EJSON.isBinary));\n\n  matches(42, Match.Where(function (x) { return x % 2 === 0; }));\n  fails(43, Match.Where(function (x) { return x % 2 === 0; }));\n\n  matches({\n    a: \"something\",\n    b: [\n      {x: 42, k: null},\n      {x: 43, k: true, p: [\"yay\"]}\n    ]\n  }, {a: String, b: [Match.ObjectIncluding({\n    x: Number,\n    k: Match.OneOf(null, Boolean)})]});\n\n\n  // Match.Integer\n  matches(-1, Match.Integer);\n  matches(0, Match.Integer);\n  matches(1, Match.Integer);\n  matches(-2147483648, Match.Integer); // INT_MIN\n  matches(2147483647, Match.Integer); // INT_MAX\n  fails(123.33, Match.Integer);\n  fails(.33, Match.Integer);\n  fails(1.348192308491824e+23, Match.Integer);\n  fails(NaN, Match.Integer);\n  fails(Infinity, Match.Integer);\n  fails(-Infinity, Match.Integer);\n  fails({}, Match.Integer);\n  fails([], Match.Integer);\n  fails(function () {}, Match.Integer);\n  fails(new Date, Match.Integer);\n\n\n  // Test non-plain objects.\n  var parentObj = {foo: \"bar\"};\n  var childObj = Object.assign(Object.create(parentObj), {bar: \"foo\"});\n  matches(parentObj, Object);\n  fails(parentObj, {foo: String, bar: String});\n  fails(parentObj, {bar: String});\n  matches(parentObj, {foo: String});\n  fails(childObj, Object);\n  fails(childObj, {foo: String, bar: String});\n  fails(childObj, {bar: String});\n  fails(childObj, {foo: String});\n\n  // Functions\n  var testFunction = function () {};\n  matches(testFunction, Function);\n  fails(5, Function);\n\n  // Circular Reference \"Classes\"\n\n  var TestInstanceChild = function () {};\n  var TestInstanceParent = function (child) {\n    child._parent = this;\n    this.child = child;\n  };\n\n  var testInstanceChild = new TestInstanceChild()\n  var testInstanceParent = new TestInstanceParent(testInstanceChild);\n\n  matches(TestInstanceParent, Function);\n  matches(testInstanceParent, TestInstanceParent);\n  fails(testInstanceChild, TestInstanceParent);\n\n  matches(testInstanceParent, Match.Optional(TestInstanceParent));\n  matches(testInstanceParent, Match.Maybe(TestInstanceParent));\n\n  // Circular Reference Objects\n\n  var circleFoo = {};\n  var circleBar = {};\n  circleFoo.bar = circleBar;\n  circleBar.foo = circleFoo;\n  fails(circleFoo, null);\n\n  // Test that \"arguments\" is treated like an array.\n  var argumentsMatches = function () {\n    matches(arguments, [Number]);\n  };\n  argumentsMatches();\n  argumentsMatches(1);\n  argumentsMatches(1, 2);\n  var argumentsFails = function () {\n    fails(arguments, [Number]);\n  };\n  argumentsFails(\"123\");\n  argumentsFails(1, \"23\");\n});\n\nTinytest.add(\"check - argument checker\", function (test) {\n  var checksAllArguments = function (f /*arguments*/) {\n    Match._failIfArgumentsAreNotAllChecked(\n      f, {}, _.toArray(arguments).slice(1), \"test\");\n  };\n  checksAllArguments(function () {});\n  checksAllArguments(function (x) {check(x, Match.Any);}, undefined);\n  checksAllArguments(function (x) {check(x, Match.Any);}, null);\n  checksAllArguments(function (x) {check(x, Match.Any);}, false);\n  checksAllArguments(function (x) {check(x, Match.Any);}, true);\n  checksAllArguments(function (x) {check(x, Match.Any);}, 0);\n  checksAllArguments(function (a, b, c) {\n    check(a, String);\n    check(b, Boolean);\n    check(c, Match.Optional(Number));\n  }, \"foo\", true);\n  checksAllArguments(function () {\n    check(arguments, [Number]);\n  }, 1, 2, 4);\n  checksAllArguments(function(x) {\n    check(x, Number);\n    check(_.toArray(arguments).slice(1), [String]);\n  }, 1, \"foo\", \"bar\", \"baz\");\n  // NaN values\n  checksAllArguments(function (x) {\n    check(x, Number);\n  }, NaN);\n\n  var doesntCheckAllArguments = function (f /*arguments*/) {\n    try {\n      Match._failIfArgumentsAreNotAllChecked(\n        f, {}, _.toArray(arguments).slice(1), \"test\");\n      test.fail({message: \"expected _failIfArgumentsAreNotAllChecked to throw\"});\n    } catch (e) {\n      test.equal(e.message, \"Did not check() all arguments during test\");\n    }\n  };\n\n  doesntCheckAllArguments(function () {}, undefined);\n  doesntCheckAllArguments(function () {}, null);\n  doesntCheckAllArguments(function () {}, 1);\n  doesntCheckAllArguments(function () {\n    check(_.toArray(arguments).slice(1), [String]);\n  }, 1, \"asdf\", \"foo\");\n  doesntCheckAllArguments(function (x, y) {\n    check(x, Boolean);\n  }, true, false);\n  // One \"true\" check doesn't count for all.\n  doesntCheckAllArguments(function (x, y) {\n    check(x, Boolean);\n  }, true, true);\n  // For non-primitives, we really do require that each arg gets checked.\n  doesntCheckAllArguments(function (x, y) {\n    check(x, [Boolean]);\n    check(x, [Boolean]);\n  }, [true], [true]);\n\n\n  // In an ideal world this test would fail, but we currently can't\n  // differentiate between \"two calls to check x, both of which are true\" and\n  // \"check x and check y, both of which are true\" (for any interned primitive\n  // type).\n  checksAllArguments(function (x, y) {\n    check(x, Boolean);\n    check(x, Boolean);\n  }, true, true);\n});\n\nTinytest.add(\"check - Match error path\", function (test) {\n  var match = function (value, pattern, expectedPath) {\n    try {\n      check(value, pattern);\n    } catch (err) {\n      // XXX just for FF 3.6, its JSON stringification prefers \"\\u000a\" to \"\\n\"\n      err.path = err.path.replace(/\\\\u000a/, \"\\\\n\");\n      if (err.path != expectedPath)\n        test.fail({\n          type: \"match-error-path\",\n          message: \"The path of Match.Error doesn't match.\",\n          pattern: JSON.stringify(pattern),\n          value: JSON.stringify(value),\n          path: err.path,\n          expectedPath: expectedPath\n        });\n    }\n  };\n\n  match({ foo: [ { bar: 3 }, {bar: \"something\"} ] }, { foo: [ { bar: Number } ] }, \"foo[1].bar\");\n  // Complicated case with arrays, $, whitespace and quotes!\n  match([{ $FoO: { \"bar baz\\n\\\"'\": 3 } }], [{ $FoO: { \"bar baz\\n\\\"'\": String } }], \"[0].$FoO[\\\"bar baz\\\\n\\\\\\\"'\\\"]\");\n  // Numbers only, can be accessed w/o quotes\n  match({ \"1231\": 123 }, { \"1231\": String }, \"[1231]\");\n  match({ \"1234abcd\": 123 }, { \"1234abcd\": String }, \"[\\\"1234abcd\\\"]\");\n  match({ $set: { people: \"nice\" } }, { $set: { people: [String] } }, \"$set.people\");\n  match({ _underscore: \"should work\" }, { _underscore: Number }, \"_underscore\");\n  // Nested array looks nice\n  match([[[\"something\", \"here\"], []], [[\"string\", 123]]], [[[String]]], \"[1][0][1]\");\n  // Object nested in arrays should look nice, too!\n  match([[[{ foo: \"something\" }, { foo: \"here\"}],\n          [{ foo: \"asdf\" }]],\n         [[{ foo: 123 }]]],\n        [[[{ foo: String }]]], \"[1][0][0].foo\");\n\n  // JS keyword\n  match({ \"return\": 0 }, { \"return\": String }, \"[\\\"return\\\"]\");\n});\n\nTinytest.add(\"check - Match error message\", function (test) {\n  var match = function (value, pattern, expectedMessage) {\n    try {\n      check(value, pattern);\n    } catch (err) {\n      if (err.message !== \"Match error: \" + expectedMessage)\n        test.fail({\n          type: \"match-error-message\",\n          message: \"The message of Match.Error doesn't match.\",\n          pattern: JSON.stringify(pattern),\n          value: JSON.stringify(value),\n          errorMessage: err.message,\n          expectedErrorMessage: expectedMessage\n        });\n    }\n  };\n\n  match(2, String, \"Expected string, got number\");\n  match({key: 0}, Number, \"Expected number, got object\");\n  match(null, Boolean, \"Expected boolean, got null\");\n  match(\"string\", undefined, \"Expected undefined, got string\");\n  match(true, null, \"Expected null, got true\");\n  match({}, Match.ObjectIncluding({ bar: String }), \"Missing key 'bar'\");\n  match(null, Object, \"Expected object, got null\");\n  match(null, Function, \"Expected function, got null\");\n  match(\"bar\", \"foo\", \"Expected foo, got \\\"bar\\\"\");\n  match(3.14, Match.Integer, \"Expected Integer, got 3.14\");\n  match(false, [Boolean], \"Expected array, got false\");\n  match([null, null], [String], \"Expected string, got null in field [0]\");\n  match(2, {key: 2}, \"Expected object, got number\");\n  match(null, {key: 2}, \"Expected object, got null\");\n  match(new Date, {key: 2}, \"Expected plain object\");\n\n  var TestInstanceChild = function () {};\n  var TestInstanceParent = function (child) {\n    child._parent = this;\n    this.child = child;\n  };\n\n  var testInstanceChild = new TestInstanceChild()\n  var testInstanceParent = new TestInstanceParent(testInstanceChild);\n  match(testInstanceChild, TestInstanceParent, \"Expected \" + (TestInstanceParent.name || \"particular constructor\"));\n\n  var circleFoo = {};\n  var circleBar = {};\n  circleFoo.bar = circleBar;\n  circleBar.foo = circleFoo;\n  match(circleFoo, null, \"Expected null, got object\");\n\n});\n\n// Regression test for https://github.com/meteor/meteor/issues/2136\nMeteor.isServer && Tinytest.addAsync(\"check - non-fiber check works\", function (test, onComplete) {\n  var Fiber = Npm.require('fibers');\n\n  // We can only call test.isTrue inside normal Meteor Fibery code, so give us a\n  // bindEnvironment way to get back.\n  var report = Meteor.bindEnvironment(function (success) {\n    test.isTrue(success);\n    onComplete();\n  });\n\n  // Get out of a fiber with process.nextTick and ensure that we can still use\n  // check.\n  process.nextTick(function () {\n    var success = true;\n    if (Fiber.current)\n      success = false;\n    if (success) {\n      try {\n        check(true, Boolean);\n      } catch (e) {\n        success = false;\n      }\n    }\n    report(success);\n  });\n});\n"]},"hash":"c050fd75bc78665c26b817748daec39fdeeb655e"}
