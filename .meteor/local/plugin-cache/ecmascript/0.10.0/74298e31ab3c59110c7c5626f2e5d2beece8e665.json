{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$10","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"packages/mongo/local_collection_driver.js","filename":"packages/mongo/local_collection_driver.js","sourceMapTarget":"packages/mongo/local_collection_driver.js.map","sourceMaps":true,"presets":[],"passPerPreset":false,"envName":"development","cwd":"/Users/taiwotejuosho/taiwo-do","parserOpts":{"sourceType":"module","sourceFileName":"packages/mongo/local_collection_driver.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","classProperties","asyncGenerators"]},"generatorOpts":{"filename":"packages/mongo/local_collection_driver.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"packages/mongo/local_collection_driver.js.map","sourceFileName":"packages/mongo/local_collection_driver.js"}},"code":"module.export({\n  LocalCollectionDriver: () => LocalCollectionDriver\n});\nconst LocalCollectionDriver = new class LocalCollectionDriver {\n  constructor() {\n    this.noConnCollections = Object.create(null);\n  }\n\n  open(name, conn) {\n    if (!name) {\n      return new LocalCollection();\n    }\n\n    if (!conn) {\n      return ensureCollection(name, this.noConnCollections);\n    }\n\n    if (!conn._mongo_livedata_collections) {\n      conn._mongo_livedata_collections = Object.create(null);\n    } // XXX is there a way to keep track of a connection's collections without\n    // dangling it off the connection object?\n\n\n    return ensureCollection(name, conn._mongo_livedata_collections);\n  }\n\n}();\n\nfunction ensureCollection(name, collections) {\n  return name in collections ? collections[name] : collections[name] = new LocalCollection(name);\n}","map":{"version":3,"sources":["packages/mongo/local_collection_driver.js"],"names":["module","export","LocalCollectionDriver","constructor","noConnCollections","Object","create","open","name","conn","LocalCollection","ensureCollection","_mongo_livedata_collections","collections"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,yBAAsB,MAAIA;AAA3B,CAAd;AACO,MAAMA,wBAAwB,IAAK,MAAMA,qBAAN,CAA4B;AACpEC,gBAAc;AACZ,SAAKC,iBAAL,GAAyBC,OAAOC,MAAP,CAAc,IAAd,CAAzB;AACD;;AAEDC,OAAKC,IAAL,EAAWC,IAAX,EAAiB;AACf,QAAI,CAAED,IAAN,EAAY;AACV,aAAO,IAAIE,eAAJ,EAAP;AACD;;AAED,QAAI,CAAED,IAAN,EAAY;AACV,aAAOE,iBAAiBH,IAAjB,EAAuB,KAAKJ,iBAA5B,CAAP;AACD;;AAED,QAAI,CAAEK,KAAKG,2BAAX,EAAwC;AACtCH,WAAKG,2BAAL,GAAmCP,OAAOC,MAAP,CAAc,IAAd,CAAnC;AACD,KAXc,CAaf;AACA;;;AACA,WAAOK,iBAAiBH,IAAjB,EAAuBC,KAAKG,2BAA5B,CAAP;AACD;;AArBmE,CAAjC,EAA9B;;AAwBP,SAASD,gBAAT,CAA0BH,IAA1B,EAAgCK,WAAhC,EAA6C;AAC3C,SAAQL,QAAQK,WAAT,GACHA,YAAYL,IAAZ,CADG,GAEHK,YAAYL,IAAZ,IAAoB,IAAIE,eAAJ,CAAoBF,IAApB,CAFxB;AAGD","file":"packages/mongo/local_collection_driver.js.map","sourcesContent":["// singleton\nexport const LocalCollectionDriver = new (class LocalCollectionDriver {\n  constructor() {\n    this.noConnCollections = Object.create(null);\n  }\n\n  open(name, conn) {\n    if (! name) {\n      return new LocalCollection;\n    }\n\n    if (! conn) {\n      return ensureCollection(name, this.noConnCollections);\n    }\n\n    if (! conn._mongo_livedata_collections) {\n      conn._mongo_livedata_collections = Object.create(null);\n    }\n\n    // XXX is there a way to keep track of a connection's collections without\n    // dangling it off the connection object?\n    return ensureCollection(name, conn._mongo_livedata_collections);\n  }\n});\n\nfunction ensureCollection(name, collections) {\n  return (name in collections)\n    ? collections[name]\n    : collections[name] = new LocalCollection(name);\n}\n"]},"hash":"74298e31ab3c59110c7c5626f2e5d2beece8e665"}
